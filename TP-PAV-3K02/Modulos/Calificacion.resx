<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJXcpACV5KQAlfCoAJn4tACl+KgAvejIAM3Q2ADV2OQA6cjoAOXM8AD1xPgA6ezsAPnBAAENv
        RABOb04AQXFBAElySQBPcU8AUm5SAFZ7VwBYdVkAXnNeAGx3bABzeXMAI4MjACSMJgAmgSwAIoYvACeE
        LwAliSkAIo0qACWOKQAiiCwAJogtACKMLAAmjC0AJZYnACSZJgAknSUAIpEqACaRKwAilSoAIpgrACWZ
        KQAinSsAJpkuACacLAAngzAAJoYwACmCMgAphTIALIQwACmDNQAphjUAJ4kwACmKMgApiTYAKYw1ACmN
        OAAnkzAAJpQzACSVNQAplTMAKZA2ACyRNwAplTYALJY2ACWaMQAmmTUAKZo3ACmROQAskDsAKZQ4ACmY
        OgAqnDkAKpo9ACqdPgAsnj8AOpk6ACShJgAkpCYAJaIqACWlKQAnoi8AKa4uACKhMQAnojEAIqQyACSk
        MAApoTMAKaI1ACWrNgAprDAAJ6I9ACuhOwAqpDoAK6M9ACmuPwApszYAKbM5ADWyNgAsn0AAO5dOADqY
        SAA/lFEAKaBAACyhQAAppEEALaVBAC+nRAAtqEEALaxCACqqRAAuqUUAL6xHADCtSAAms0EALLNKAC+4
        TQA2uEUAMLJKADCyTAAxtUwAMrlOADK9TgA6plQAMr1QADi9XwA5u2IATIVOAEGYQgBZh1kAXYdfAFmJ
        XgBajVwATZVZAEKiQQBHqEMASq1HAEKwSQBQs0wAVLpNAFCvVQBZvVAAX5VnAGeMaQBoj2oAaZRsAHGH
        cQB3g3cAdIV0AHqNegB+j34AcpFzAH2YfQBfsmQAebJ5ACnITQAvx1EALMpRADLBUQA1wVIANcNUADHG
        VAA1xlUAMchVADbIVgA2xlgANslYADLOWAA1zVoANs5cADfRXAA31F4AONVfADfYXwA42l8AOMJgADjP
        YQA7xGgAPs1uADjVYAA60WYAOtRlADjaYQA53mMAOtlkAD/acAA74GcAO+FoAD3kawA94WwAP+RwAEvD
        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
        AP//gAH//+AH////////////
</value>
  </data>
</root>