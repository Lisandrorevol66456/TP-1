<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABQUFAA0RDQASEhMAFhYSABMVFQAeHh4AISAeACQgJQAlJSUAKSkmACkpKQAtLysALS0sADAt
        LwAyMjIANTU1ADg4NwA4ODkAOzs9ADs9PAA9PT0APz9AAEFBQQBGQ0UARUZGAEpIRQBGSEgASElIAExL
        SwBMTEsAS0tNAExLTABNTUwAUlBOAFFQUQBVU1IAU1VTAFRUVABYVVQAVVZeAFpaWgBeXlsAW11cAF1d
        XQBfYV8AX19iAF9hYQBiYWIAYmNkAGNkZABlZWUAaGdnAGhlagBoaGgAaWptAGttbABtbW0Ab3BtAHNz
        bQBxcHEAcXRyAHRwdAB1dXUAdnh2AHh4dwB1eHgAdXh+AHl5eAB8e3oAenx7AHp6fQB9fX0Ap3hQAKaW
        dgB+fYAAJavpAICBgQCAgYYAhYWEAIKIgQCMjIMAi4uHAIWJiQCKiooAj4yLAIuOjQCMjo0Ako+SAJGR
        kQCUk5QAlpaWAJWXmACXmJkAl52bAJqZmQCcmpkAmp2aAJ2dmACam5wAnpqcAJ2dnQC4mYMAsKKMALCl
        jACrpZ0AsaWXAL+zmQCgn6IAoqKiAKamogClo6YApKSlAKenqACmqawAqqqqAKyrqwCsrasAq62sAK+v
        rwCtsK0Au7esAKursACxsrEAtbSzALS0tQC6tbMAtbi1ALO2uQC4uLgAvL+4AL29vQDDs48Ax7KjAMG0
        qgDAv7wAvsC/AMPAtQDLw7UAwMC/AMnEvQDPxb8A1cuzANrRuwCZv9QAkrrfALu9wQCqwMwAt8rVALHH
        3gCAwuMAwcHBAMXDwwDDxMUAxcXEAMjFxQDLyMYAzM7HAMfIygDFy84AycnJAM3JygDNzMsAy8vMAMzL
        zADNzc0A0M7JANHKzADO0M4A0dDPANjUzwDa2M0Az8/QAM7Q0ADR0tIA1NPSANPU0wDU1NMA0dLUANTT
        1ADS1NUA1dXVANjW1QDZ2NQA3dnWANLT2ADT19oA1NXaANbY2QDW2d0A2dnZANvc2wDc3NoA2trcANrc
        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
        f///w///////////////////
</value>
  </data>
</root>