<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPWxnAIxyJACOfDcAmoQ+AJSGSQCckFEAnJJZAKWRTgCqllIAqZZUAKKaZgCjnW4ApJ9xALWl
        bQC+r3kAJGWQABRnwQAffc8AG27WABpv2gARcd0AE3TeAB9y2wAee98ALW/UACxw1gAtdNcAJHHZACh2
        2wAhe98AMHjaADV52gABcOEADnbhABJ24AAXfeMAHn3hAHWYiQButrcAfry0AD6aygA8gN0AAYbuAAyD
        6QAcgOUAHoXnAAiY9gATkfAAI4HjACWN6wAyjugAK5TtADyb7QAxn/MAJqj7ACmr/AA0o/UAMK78AD+r
        +AAxsPwAP7L7ADuz/AA+s/wAQ4LYAEKC3ABFg9wAT4fdAFSL3gBUjN4AWo/bAGmT1wBikd4AcZjZAF2x
        wQBdkuAAaZbgAHGb4QBLou4ATbD2AEWy+gBFtvwASLf9AEy2/ABIuP0ATbn8AFew9ABYsPQAXbv0AFy8
        9gBRuv0AUrz8AFS8/ABYvv0AXL/+AHag4wB/puUAbbroAH295QBkvfMAX8D6AGHB/QBlwv0Aa8D6AG/A
        +ABtxf0Ac8T0AHLI/gB2yf0AeMr5AHvL/gB9zP8Aib2pAIy+qACwvrQAw7WDAJTDsgCzwq4At8OyALPE
        vwDOw5UAzMGaANHGoADTyaMAgaPeAICk3QCBpuQAn8vAALjMxgC0yMkAqdLNAKDJ0QCyy9sAsszbALLM
        3AC0zt0AstHVALjc3wCBxe8AkcXlAJXF5ACaxuIAn8jiAJ3J5gCDzfsAgc39AITO/wCTzvIAlc7wAIvR
        /wCN1P0AkNP3AJzS8gCQ0/8Aktb9AJbW/gCf1vgAmdb+AJnY/QCd2f4AoMniAKbK4QChyuUAqMzjAKnN
        5ACo0+MArNLpAKrV7wC20OAAuNLiALnU5AC73uMAsNbuAL7Z6QCr1/MApNf4AKLa/wCz2vIAt9/4AL/h
        6QC14/4Au+P8ALrk/gDi28AAwNvsAMHd7QDE3+8AxOHvAMLk7ADF4fEAyub2AMXq/gDN6voAyuz+AM/s
        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
        ////////////////////////
</value>
  </data>
</root>